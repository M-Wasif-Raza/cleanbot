amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    set_initial_pose: true
    # initial_pose: {x: 1.7, y: 1.5, z: 0.0, yaw: 45.0}
    # RISE LAB
    # initial_pose: {x: 48.3, y: 45.6, z: 0.0, yaw: 0.0}
    # LIAQAT
   # initial_pose: {x: 0.4, y: 0.6, z: 0.0, yaw: 0.0}
    initial_pose: {x: 20.4, y: 4.2, z: 0.0, yaw: 0.0}
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan


coverage_server:
  ros__parameters:
    use_sim_time: True
    action_server_result_timeout: 100.0
    default_headland_width: 0.15
    robot_width: 0.25
    operation_width: 0.175
    min_turning_radius: 0.08
    linear_curv_change: 0.0
    coordinates_in_cartesian_frame: true
    default_allow_overlap: false
    default_path_type: "DUBIN"
    default_swath_angle_type: "BRUTE_FORCE"
    default_swath_type: "NUMBER"
    default_route_type: "BOUSTROPHEDON"
    default_swath_angle: 0.0 # We know its aligned for the demo

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased","GridBased1","GridBased2"]
    

    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
      tolerance: 0.125                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false             # whether or not to downsample the map
      downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true                   # allow traveling in unknown space
      max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 2.0                # max time in s for planner to plan, smooth
      cost_travel_multiplier: 2.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
            
    GridBased1:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: true
      
    GridBased2:
      plugin: "nav2_smac_planner/SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
      tolerance: 0.125                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false             # whether or not to downsample the map
      downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true                   # allow traveling in unknown space
      max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 2.0                # max time in s for planner to plan, smooth
      cost_travel_multiplier: 2.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      


row_coverage_server:
  ros__parameters:
    use_sim_time: True
    robot_width: 0.7
    operation_width: 0.7
    min_turning_radius: 0.35
    linear_curv_change: 200.0
    coordinates_in_cartesian_frame: true
    default_swath_type: "CENTER"
    default_offset: 0.0

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_coverage_bt_xml' uses defaults:
    # opennav_coverage_bt/behavior_tree/navigate_w_basic_complete_coverage.xml
    default_coverage_bt_xml: "$(find-pkg-share cleanbot)/coverage_bt.xml"

    navigators: ['navigate_complete_coverage', 'navigate_to_pose']
    navigate_complete_coverage:
      plugin: "opennav_coverage_navigator/CoverageNavigator"
    navigate_to_pose:
      plugin: "backported_bt_navigator/NavigateToPoseNavigator" 
    error_code_names: ["compute_path_error_code", "follow_path_error_code", "compute_coverage_error_code"]

    plugin_lib_names:
      - nav2_follow_path_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_get_pose_from_path_action_bt_node
      - nav2_rate_controller_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - opennav_compute_complete_coverage_action_bt_node
      - opennav_cancel_complete_coverage_action_bt_node

 
controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath", "FollowPath1", "FollowPath2"]
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.20
      yaw_goal_tolerance: 0.15
    # RPP parameters
    FollowPath2:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.25
      lookahead_dist: 0.4
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.6
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.0
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.04
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 0.6
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.1
      use_cost_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.7
      regulated_linear_scaling_min_speed: 0.2
      use_rotate_to_heading: true  # allows to follow coverage path better in sharper turns
      allow_reversing: false
      rotate_to_heading_min_angle: 1.0
      max_angular_accel: 1.0
      max_robot_pose_search_dist: 10.0
      use_interpolation: true
     
     # without collision
    FollowPath1:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.3
      lookahead_dist: 0.4
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.6
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.0
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 0.04
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.1
      use_cost_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.7
      regulated_linear_scaling_min_speed: 0.2
      use_rotate_to_heading: true  # allows to follow coverage path better in sharper turns
      allow_reversing: false
      rotate_to_heading_min_angle: 1.0
      max_angular_accel: 1.0
      max_robot_pose_search_dist: 10.0
      use_interpolation: true  
    
     # MPPI parameters
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 55
      model_dt: 0.1
      batch_size: 10000
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.4
      vx_max: 0.3
      vx_min: -0.1
      vy_max: 0.4
      wz_max: 1.0
      ax_max: 3.0
      ax_min: -3.0
      ay_max: 3.0
      az_max: 3.5
      iteration_count: 2
      prune_distance: 0.6
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive"
      visualize: false
      reset_period: 1.0 # (only in Humble)
      regenerate_noises: false
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      AckermannConstraints:
        min_turning_r: 0.1
      critics: ["ConstraintCritic", "CostCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 2
        cost_weight: 5.0
        threshold_to_consider: 1.7
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.5
      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.5
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 5.5
        critical_weight: 30.0
        consider_footprint: true
        collision_cost: 13000.0
        collision_margin_distance: 0.5
        near_goal_distance: 0.5
        inflation_radius: 0.75 # (only in Humble)
        cost_scaling_factor: 14.0 # (only in Humble)
      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.81
        critical_cost: 300.0
        consider_footprint: true
        collision_cost: 1000000.0
        near_goal_distance: 1.0
        trajectory_point_step: 2
      PathAlignCritic:
        enabled: true
        cost_power: 2
        cost_weight: 20.0
        max_path_occupancy_ratio: 0.06
        trajectory_point_step: 5
        threshold_to_consider: 0.6
        offset_from_furthest: 10
        use_path_orientations: true
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 2
        threshold_to_consider: 1.0
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.2
        offset_from_furthest: 2
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0
      # VelocityDeadbandCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 35.0
      #   deadband_velocities: [0.05, 0.05, 0.05]
      TwirlingCritic:
         enabled: true
         twirling_cost_power: 1
         twirling_cost_weight: 10.0
      
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: True
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      footprint: "[ [0.2, 0.2], [0.2, -0.2], [-0.2, -0.2], [-0.2, 0.2] ]"
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.5
        inflation_radius: 0.28
      voxel_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        max_obstacle_height: 2.0
        mark_threshold: 0
        footprint_clearing_enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.2
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True


global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: True
      robot_radius: 0.22
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.25
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    topic_name: "map"
    frame_id: "map"
    yaml_filename: "path to your physical environment map"


behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_complete_coverage_rclcpp_node:
  ros__parameters:
    use_sim_time: True

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.5, 0.0, 2.0]
    min_velocity: [-0.5, 0.0, -2.0]
    max_accel: [2.5, 0.0, 5.2]
    max_decel: [-2.5, 0.0, -5.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    
    
 
